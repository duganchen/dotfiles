#!/usr/bin/env bash

# vidthumb /path/to/movie.ext
# Outputs the path to movie.ext's thumbnail, after generating and caching it iff
# necessary.

# All data is stored in ~/.cache/vidthumb/.

# Included are two very simple scripts, kitty_vidthumb and iterm_vidthumb, to actually
# display the thumbnails in Kitty or iterm2, respectively.

# Set pistol.conf up so that Pistol (https://github.com/doronbehar/pistol) uses them:

# video/* kitty_vidthumb %pistol-filename%
# or
# https://github.com/doronbehar/pistol

# And then set ranger, nnn or lf to use Pistol for inline
# image previews.

# Not that this has dependencies on jq (https://stedolan.github.io/jq/),
# ffmpegthumbnailer and uuidgen.

if ! [ -f "$1" ]; then
	exit 1
fi

if [[ "$(file -L -b --mime-type "$1")" != video/* ]]; then
	exit 1
fi

cache="$HOME/.cache/vidthumb"
index="$HOME/.cache/vidthumb/index.json"
movie="$(realpath "$1")"
thumbnail=""

mkdir -p "$cache"

if [ -f "$index" ]; then
	thumbnail="$(jq -r ". \"$movie\"" <"$index")"
	if [[ "$thumbnail" == "null" ]]; then
		thumbnail="$(uuidgen).jpg"
		json="$(jq -r --arg "$movie" "$thumbnail" ". + {\"$movie\": \"$thumbnail\"}" <"$index")"
		echo "$json" >"$index"
	fi
else
	thumbnail="$(uuidgen).jpg"
	echo "{\"$movie\": \"$thumbnail\"}" >"$index"
fi

if [ ! -f "$cache/$thumbnail" ]; then
	ffmpegthumbnailer -i "$movie" -o "$cache/$thumbnail" -s 0 2>/dev/null
fi

echo "$cache/$thumbnail"
